{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\interactive-comments-section-master\\\\src\\\\Components\\\\Reply.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Styles/Comment.scss\";\nimport DeleteModal from \"./DeleteModal\";\nimport { CommentHeader, CommentFooter, CommentVotes } from \"./commentParts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reply = _ref => {\n  _s();\n\n  let {\n    commentData,\n    updateScore,\n    addNewReply,\n    editComment,\n    deleteComment,\n    setDeleteModalState\n  } = _ref;\n  const [replying, setReplying] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [content, setContent] = useState(commentData.content);\n  const [deleting, setDeleting] = useState(false); // adding reply\n\n  const addReply = newReply => {\n    addNewReply(newReply);\n    setReplying(false);\n  };\n\n  const commentContent = () => {\n    const text = commentData.content.trim().split(\" \");\n    const firstWord = text.shift().split(\",\");\n    return !editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"replyingTo\",\n        children: firstWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), text.join(\" \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"content-edit-box\",\n      value: content,\n      onChange: e => {\n        setContent(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n\n  const updateComment = () => {\n    editComment(content, commentData.id, \"reply\");\n    setEditing(false);\n  }; // delete comment\n\n\n  const deleteReply = () => {\n    deleteComment(commentData.id, \"reply\");\n    setDeleting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `comment-container ${commentData.replies[0] !== undefined ? \"gap\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(CommentVotes, {\n        updateScore: updateScore,\n        commentData: commentData,\n        type: \"reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment--body\",\n        children: [/*#__PURE__*/_jsxDEV(CommentHeader, {\n          commentData: commentData,\n          setReplying: setReplying,\n          setDeleting: setDeleting,\n          setDeleteModalState: setDeleteModalState,\n          setEditing: setEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), commentContent(), editing && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-btn\",\n          onClick: updateComment,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentFooter, {\n        updateScore: updateScore,\n        commentData: commentData,\n        setReplying: setReplying,\n        setDeleting: setDeleting,\n        setDeleteModalState: setDeleteModalState,\n        setEditing: setEditing,\n        type: \"reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), replying && /*#__PURE__*/_jsxDEV(AddComment, {\n      buttonValue: \"reply\",\n      addComments: addReply,\n      replyingTo: commentData.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), commentData.replies.map(reply => /*#__PURE__*/_jsxDEV(Reply, {\n      commentData: reply,\n      addReply: addReply\n    }, reply.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)), deleting && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      setDeleting: setDeleting,\n      deleteComment: deleteReply,\n      setDeleteModalState: setDeleteModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reply, \"9mZrKds04+d9MZiitrBvhWuSblU=\");\n\n_c = Reply;\nexport default Reply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reply\");","map":{"version":3,"sources":["D:/University/interactive-comments-section-master/src/Components/Reply.js"],"names":["useState","DeleteModal","CommentHeader","CommentFooter","CommentVotes","Reply","commentData","updateScore","addNewReply","editComment","deleteComment","setDeleteModalState","replying","setReplying","editing","setEditing","content","setContent","deleting","setDeleting","addReply","newReply","commentContent","text","trim","split","firstWord","shift","join","e","target","value","updateComment","id","deleteReply","replies","undefined","username","map","reply"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport \"./Styles/Comment.scss\";\n\nimport DeleteModal from \"./DeleteModal\";\n\nimport { CommentHeader, CommentFooter, CommentVotes } from \"./commentParts\";\n\nconst Reply = ({\n  commentData,\n  updateScore,\n  addNewReply,\n  editComment,\n  deleteComment,\n  setDeleteModalState,\n}) => {\n  const [replying, setReplying] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [content, setContent] = useState(commentData.content);\n  const [deleting, setDeleting] = useState(false);\n\n  // adding reply\n  const addReply = (newReply) => {\n    addNewReply(newReply);\n    setReplying(false);\n  };\n\n  const commentContent = () => {\n    const text = commentData.content.trim().split(\" \");\n    const firstWord = text.shift().split(\",\");\n\n    return !editing ? (\n      <div className=\"comment-content\">\n        <span className=\"replyingTo\">{firstWord}</span>\n        {text.join(\" \")}\n      </div>\n    ) : (\n      <textarea\n        className=\"content-edit-box\"\n        value={content}\n        onChange={(e) => {\n          setContent(e.target.value);\n        }}\n      />\n    );\n  };\n\n  const updateComment = () => {\n    editComment(content, commentData.id, \"reply\");\n    setEditing(false);\n  };\n\n  // delete comment\n  const deleteReply = () => {\n    deleteComment(commentData.id, \"reply\");\n    setDeleting(false);\n  };\n\n  return (\n    <div\n      className={`comment-container ${\n        commentData.replies[0] !== undefined ? \"gap\" : \"\"\n      }`}\n    >\n      <div className=\"comment\">\n        <CommentVotes\n          updateScore={updateScore}\n          commentData={commentData}\n          type=\"reply\"\n        />\n        <div className=\"comment--body\">\n          <CommentHeader\n            commentData={commentData}\n            setReplying={setReplying}\n            setDeleting={setDeleting}\n            setDeleteModalState={setDeleteModalState}\n            setEditing={setEditing}\n          />\n\n          {commentContent()}\n          {editing && (\n            <button className=\"update-btn\" onClick={updateComment}>\n              update\n            </button>\n          )}\n        </div>\n        <CommentFooter\n          updateScore={updateScore}\n          commentData={commentData}\n          setReplying={setReplying}\n          setDeleting={setDeleting}\n          setDeleteModalState={setDeleteModalState}\n          setEditing={setEditing}\n          type=\"reply\"\n        />\n      </div>\n\n      {replying && (\n        <AddComment\n          buttonValue={\"reply\"}\n          addComments={addReply}\n          replyingTo={commentData.username}\n        />\n      )}\n      {commentData.replies.map((reply) => (\n        <Reply key={reply.id} commentData={reply} addReply={addReply} />\n      ))}\n\n      {deleting && (\n        <DeleteModal\n          setDeleting={setDeleting}\n          deleteComment={deleteReply}\n          setDeleteModalState={setDeleteModalState}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Reply;\n"]},"metadata":{},"sourceType":"module"}