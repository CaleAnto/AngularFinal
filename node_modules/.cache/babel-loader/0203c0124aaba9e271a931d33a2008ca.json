{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\interactive-comments-section-master\\\\src\\\\Components\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Styles/Comment.scss\";\nimport AddComment from \"./AddComment\";\nimport ReplyContainer from \"./ReplyContainer\";\nimport DeleteModal from \"./DeleteModal\";\nimport { CommentHeader, CommentFooter, CommentVotes } from \"./commentParts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = _ref => {\n  _s();\n\n  let {\n    commentData,\n    updateScore,\n    updateReplies,\n    editComment,\n    commentDelete,\n    setDeleteModalState\n  } = _ref;\n  const [replying, setReplying] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [content, setContent] = useState(commentData.content);\n  const [deleting, setDeleting] = useState(false);\n\n  const addReply = newReply => {\n    const replies = [...commentData.replies, newReply];\n    updateReplies(replies, commentData.id);\n    setReplying(false);\n  };\n\n  const updateComment = () => {\n    editComment(content, commentData.id, \"comment\");\n    setEditing(false);\n  };\n\n  const deleteComment = (id, type) => {\n    const finalType = type !== undefined ? type : \"comment\";\n    const finalId = id !== undefined ? id : commentData.id;\n    commentDelete(finalId, finalType, commentData.id);\n    setDeleting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `comment-container ${commentData.replies[0] !== undefined ? \"reply-container-gap\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(CommentVotes, {\n        updateScore: updateScore,\n        commentData: commentData,\n        type: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment--body\",\n        children: [/*#__PURE__*/_jsxDEV(CommentHeader, {\n          commentData: commentData,\n          replying: replying,\n          setReplying: setReplying,\n          setDeleting: setDeleting,\n          setDeleteModalState: setDeleteModalState,\n          setEditing: setEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), !editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: commentData.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"content-edit-box\",\n          value: content,\n          onChange: e => {\n            setContent(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), editing && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-btn\",\n          onClick: updateComment,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentFooter, {\n        updateScore: updateScore,\n        commentData: commentData,\n        setReplying: setReplying,\n        setDeleting: setDeleting,\n        setDeleteModalState: setDeleteModalState,\n        setEditing: setEditing,\n        type: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), replying && /*#__PURE__*/_jsxDEV(AddComment, {\n      buttonValue: \"reply\",\n      addComments: addReply,\n      replyingTo: commentData.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), commentData.replies !== [] && /*#__PURE__*/_jsxDEV(ReplyContainer, {\n      commentData: commentData.replies,\n      updateScore: updateScore,\n      addReply: addReply,\n      editComment: editComment,\n      deleteComment: deleteComment,\n      setDeleteModalState: setDeleteModalState\n    }, commentData.replies.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), deleting && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      setDeleting: setDeleting,\n      deleteComment: deleteComment,\n      setDeleteModalState: setDeleteModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comment, \"9mZrKds04+d9MZiitrBvhWuSblU=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["D:/University/interactive-comments-section-master/src/Components/Comment.js"],"names":["useState","AddComment","ReplyContainer","DeleteModal","CommentHeader","CommentFooter","CommentVotes","Comment","commentData","updateScore","updateReplies","editComment","commentDelete","setDeleteModalState","replying","setReplying","editing","setEditing","content","setContent","deleting","setDeleting","addReply","newReply","replies","id","updateComment","deleteComment","type","finalType","undefined","finalId","e","target","value","username"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport \"./Styles/Comment.scss\";\n\nimport AddComment from \"./AddComment\";\nimport ReplyContainer from \"./ReplyContainer\";\nimport DeleteModal from \"./DeleteModal\";\n\nimport { CommentHeader, CommentFooter, CommentVotes } from \"./commentParts\";\n\nconst Comment = ({\n  commentData,\n  updateScore,\n  updateReplies,\n  editComment,\n  commentDelete,\n  setDeleteModalState,\n}) => {\n  const [replying, setReplying] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [content, setContent] = useState(commentData.content);\n  const [deleting, setDeleting] = useState(false);\n\n  const addReply = (newReply) => {\n    const replies = [...commentData.replies, newReply];\n    updateReplies(replies, commentData.id);\n    setReplying(false);\n  };\n\n  const updateComment = () => {\n    editComment(content, commentData.id, \"comment\");\n    setEditing(false);\n  };\n\n  const deleteComment = (id, type) => {\n    const finalType = type !== undefined ? type : \"comment\";\n    const finalId = id !== undefined ? id : commentData.id;\n    commentDelete(finalId, finalType, commentData.id);\n    setDeleting(false);\n  };\n\n  return (\n    <div\n      className={`comment-container ${\n        commentData.replies[0] !== undefined ? \"reply-container-gap\" : \"\"\n      }`}\n    >\n      <div className=\"comment\">\n        <CommentVotes\n          updateScore={updateScore}\n          commentData={commentData}\n          type=\"comment\"\n        />\n        <div className=\"comment--body\">\n          <CommentHeader\n            commentData={commentData}\n            replying={replying}\n            setReplying={setReplying}\n            setDeleting={setDeleting}\n            setDeleteModalState={setDeleteModalState}\n            setEditing={setEditing}\n          />\n          {!editing ? (\n            <div className=\"comment-content\">{commentData.content}</div>\n          ) : (\n            <textarea\n              className=\"content-edit-box\"\n              value={content}\n              onChange={(e) => {\n                setContent(e.target.value);\n              }}\n            />\n          )}\n          {editing && (\n            <button className=\"update-btn\" onClick={updateComment}>\n              update\n            </button>\n          )}\n        </div>\n        <CommentFooter\n          updateScore={updateScore}\n          commentData={commentData}\n          setReplying={setReplying}\n          setDeleting={setDeleting}\n          setDeleteModalState={setDeleteModalState}\n          setEditing={setEditing}\n          type=\"comment\"\n        />{\" \"}\n      </div>\n\n      {replying && (\n        <AddComment\n          buttonValue={\"reply\"}\n          addComments={addReply}\n          replyingTo={commentData.username}\n        />\n      )}\n      {commentData.replies !== [] && (\n        <ReplyContainer\n          key={commentData.replies.id}\n          commentData={commentData.replies}\n          updateScore={updateScore}\n          addReply={addReply}\n          editComment={editComment}\n          deleteComment={deleteComment}\n          setDeleteModalState={setDeleteModalState}\n        />\n      )}\n\n      {deleting && (\n        <DeleteModal\n          setDeleting={setDeleting}\n          deleteComment={deleteComment}\n          setDeleteModalState={setDeleteModalState}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}