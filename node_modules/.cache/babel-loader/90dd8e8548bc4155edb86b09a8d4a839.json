{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\interactive-comments-section-master\\\\src\\\\App.js\",\n    _s4 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./Components/Styles/App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s4();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$();\n\n  /* Добавление комментария */\n  const AddComment = _ref => {\n    _s();\n\n    let {\n      buttonValue,\n      addComments,\n      replyingTo\n    } = _ref;\n    const replyingToUser = replyingTo ? `@${replyingTo}, ` : \"\";\n    const [comment, setComment] = useState(replyingToUser);\n\n    const clickHandler = () => {\n      if (comment === \"\" || comment === \" \") return;\n      const newComment = {\n        id: Math.floor(Math.random() * 100) + 5,\n        content: replyingToUser + comment.replace(replyingToUser, \"\"),\n        createdAt: new Date(),\n        score: 0,\n        username: \"juliusomo\",\n        currentUser: true,\n        replies: []\n      };\n      addComments(newComment);\n      setComment(\"\");\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"comment-input\",\n        placeholder: \"Add a comment\",\n        value: comment,\n        onChange: e => {\n          setComment(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"send-btn-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-btn\",\n          onClick: clickHandler,\n          children: buttonValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  };\n  /* Добавление комментария */\n\n  /* Блок ответа */\n\n\n  _s(AddComment, \"Mr9KNzV1B56l84fQ8zthtOGT7Yc=\");\n\n  const ReplyContainer = _ref2 => {\n    let {\n      commentData,\n      updateScore,\n      addReply,\n      editComment,\n      deleteComment,\n      setDeleteModalState\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reply-container\",\n      children: commentData.map(data => /*#__PURE__*/_jsxDEV(Reply, {\n        commentData: data,\n        updateScore: updateScore,\n        addNewReply: addReply,\n        editComment: editComment,\n        deleteComment: deleteComment,\n        setDeleteModalState: setDeleteModalState\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this);\n  };\n  /* Блок ответа */\n\n  /* Удаление модалки */\n\n\n  const DeleteModal = _ref3 => {\n    let {\n      setDeleting,\n      deleteComment,\n      setDeleteModalState\n    } = _ref3;\n\n    const cancelDelete = () => {\n      setDeleting(false);\n      setDeleteModalState(false);\n    };\n\n    const deleteBtnClick = () => {\n      deleteComment();\n      setDeleteModalState(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-confirmation-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Delete comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-message\",\n          children: \"Are you sure you want to delete this comment? This will remove the comment and can't be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: cancelDelete,\n            children: \"No, cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: deleteBtnClick,\n            children: \"Yes, delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n  };\n  /* Удаление модалки */\n\n  /* Ответы */\n\n\n  const Reply = _ref4 => {\n    _s2();\n\n    let {\n      commentData,\n      updateScore,\n      addNewReply,\n      editComment,\n      deleteComment,\n      setDeleteModalState\n    } = _ref4;\n    const [replying, setReplying] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [content, setContent] = useState(commentData.content);\n    const [deleting, setDeleting] = useState(false); // adding reply\n\n    const addReply = newReply => {\n      addNewReply(newReply);\n      setReplying(false);\n    };\n\n    const commentContent = () => {\n      const text = commentData.content.trim().split(\" \");\n      const firstWord = text.shift().split(\",\");\n      return !editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"replyingTo\",\n          children: firstWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), text.join(\" \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"content-edit-box\",\n        value: content,\n        onChange: e => {\n          setContent(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this);\n    };\n\n    const updateComment = () => {\n      editComment(content, commentData.id, \"reply\");\n      setEditing(false);\n    }; // delete comment\n\n\n    const deleteReply = () => {\n      deleteComment(commentData.id, \"reply\");\n      setDeleting(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `comment-container ${commentData.replies[0] !== undefined ? \"gap\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(CommentVotes, {\n          updateScore: updateScore,\n          commentData: commentData,\n          type: \"reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment--body\",\n          children: [/*#__PURE__*/_jsxDEV(CommentHeader, {\n            commentData: commentData,\n            setReplying: setReplying,\n            setDeleting: setDeleting,\n            setDeleteModalState: setDeleteModalState,\n            setEditing: setEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this), commentContent(), editing && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-btn\",\n            onClick: updateComment,\n            children: \"update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CommentFooter, {\n          updateScore: updateScore,\n          commentData: commentData,\n          setReplying: setReplying,\n          setDeleting: setDeleting,\n          setDeleteModalState: setDeleteModalState,\n          setEditing: setEditing,\n          type: \"reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), replying && /*#__PURE__*/_jsxDEV(AddComment, {\n        buttonValue: \"reply\",\n        addComments: addReply,\n        replyingTo: commentData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), commentData.replies.map(reply => /*#__PURE__*/_jsxDEV(Reply, {\n        commentData: reply,\n        addReply: addReply\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)), deleting && /*#__PURE__*/_jsxDEV(DeleteModal, {\n        setDeleting: setDeleting,\n        deleteComment: deleteReply,\n        setDeleteModalState: setDeleteModalState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this);\n  };\n  /* Ответы */\n\n\n  _s2(Reply, \"9mZrKds04+d9MZiitrBvhWuSblU=\");\n\n  const Comment = _ref5 => {\n    _s3();\n\n    let {\n      commentData,\n      updateScore,\n      updateReplies,\n      editComment,\n      commentDelete,\n      setDeleteModalState\n    } = _ref5;\n    const [replying, setReplying] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [content, setContent] = useState(commentData.content);\n    const [deleting, setDeleting] = useState(false);\n\n    const addReply = newReply => {\n      const replies = [...commentData.replies, newReply];\n      updateReplies(replies, commentData.id);\n      setReplying(false);\n    };\n\n    const updateComment = () => {\n      editComment(content, commentData.id, \"comment\");\n      setEditing(false);\n    };\n\n    const deleteComment = (id, type) => {\n      const finalType = type !== undefined ? type : \"comment\";\n      const finalId = id !== undefined ? id : commentData.id;\n      commentDelete(finalId, finalType, commentData.id);\n      setDeleting(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `comment-container ${commentData.replies[0] !== undefined ? \"reply-container-gap\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(CommentVotes, {\n          updateScore: updateScore,\n          commentData: commentData,\n          type: \"comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment--body\",\n          children: [/*#__PURE__*/_jsxDEV(CommentHeader, {\n            commentData: commentData,\n            replying: replying,\n            setReplying: setReplying,\n            setDeleting: setDeleting,\n            setDeleteModalState: setDeleteModalState,\n            setEditing: setEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 11\n          }, this), !editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: commentData.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"content-edit-box\",\n            value: content,\n            onChange: e => {\n              setContent(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), editing && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-btn\",\n            onClick: updateComment,\n            children: \"update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CommentFooter, {\n          updateScore: updateScore,\n          commentData: commentData,\n          setReplying: setReplying,\n          setDeleting: setDeleting,\n          setDeleteModalState: setDeleteModalState,\n          setEditing: setEditing,\n          type: \"comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }, this), replying && /*#__PURE__*/_jsxDEV(AddComment, {\n        buttonValue: \"reply\",\n        addComments: addReply,\n        replyingTo: commentData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), commentData.replies !== [] && /*#__PURE__*/_jsxDEV(ReplyContainer, {\n        commentData: commentData.replies,\n        updateScore: updateScore,\n        addReply: addReply,\n        editComment: editComment,\n        deleteComment: deleteComment,\n        setDeleteModalState: setDeleteModalState\n      }, commentData.replies.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), deleting && /*#__PURE__*/_jsxDEV(DeleteModal, {\n        setDeleting: setDeleting,\n        deleteComment: deleteComment,\n        setDeleteModalState: setDeleteModalState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s3(Comment, \"9mZrKds04+d9MZiitrBvhWuSblU=\");\n\n  const [comments, updateComments] = useState([]);\n  const [deleteModalState, setDeleteModalState] = useState(false);\n\n  const getData = async () => {\n    const res = await fetch(\"./data/data.json\");\n    const data = await res.json();\n    updateComments(data.comments);\n  };\n\n  useEffect(() => {\n    localStorage.getItem(\"comments\") !== null ? updateComments(JSON.parse(localStorage.getItem(\"comments\"))) : getData();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n    deleteModalState ? document.body.classList.add(\"overflow--hidden\") : document.body.classList.remove(\"overflow--hidden\");\n  }, [comments, deleteModalState]); // update score\n\n  const updateScore = (score, id, type, method) => {\n    let updatedComments = [...comments];\n\n    if (type === \"comment\") {\n      updatedComments.forEach(data => {\n        if (data.id === id) {\n          data.score = score;\n          data.voted = method === \"upvote\" ? true : false;\n        }\n      });\n    } else if (type === \"reply\") {\n      updatedComments.forEach(comment => {\n        comment.replies.forEach(data => {\n          if (data.id === id) {\n            data.score = score;\n            data.voted = method === \"upvote\" ? true : false;\n          }\n        });\n      });\n    }\n\n    updateComments(updatedComments);\n  }; // add comments\n\n\n  const addComments = newComment => {\n    const updatedComments = [...comments, newComment];\n    updateComments(updatedComments);\n  }; // add replies\n\n\n  const updateReplies = (replies, id) => {\n    let updatedComments = [...comments];\n    updatedComments.forEach(data => {\n      if (data.id === id) {\n        data.replies = [...replies];\n      }\n    });\n    updateComments(updatedComments);\n  }; // edit comment\n\n\n  const editComment = (content, id, type) => {\n    let updatedComments = [...comments];\n\n    if (type === \"comment\") {\n      updatedComments.forEach(data => {\n        if (data.id === id) {\n          data.content = content;\n        }\n      });\n    } else if (type === \"reply\") {\n      updatedComments.forEach(comment => {\n        comment.replies.forEach(data => {\n          if (data.id === id) {\n            data.content = content;\n          }\n        });\n      });\n    }\n\n    updateComments(updatedComments);\n  }; // delete comment\n\n\n  let commentDelete = (id, type, parentComment) => {\n    let updatedComments = [...comments];\n    let updatedReplies = [];\n\n    if (type === \"comment\") {\n      updatedComments = updatedComments.filter(data => data.id !== id);\n    } else if (type === \"reply\") {\n      comments.forEach(comment => {\n        if (comment.id === parentComment) {\n          updatedReplies = comment.replies.filter(data => data.id !== id);\n          comment.replies = updatedReplies;\n        }\n      });\n    }\n\n    updateComments(updatedComments);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      commentData: comment,\n      updateScore: updateScore,\n      updateReplies: updateReplies,\n      editComment: editComment,\n      commentDelete: commentDelete,\n      setDeleteModalState: setDeleteModalState\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(AddComment, {\n      buttonValue: \"send\",\n      addComments: addComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(App, \"Ye1rPW7xRkrmEDK02fTzOLS0H3o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/University/interactive-comments-section-master/src/App.js"],"names":["useState","useEffect","App","AddComment","buttonValue","addComments","replyingTo","replyingToUser","comment","setComment","clickHandler","newComment","id","Math","floor","random","content","replace","createdAt","Date","score","username","currentUser","replies","e","target","value","ReplyContainer","commentData","updateScore","addReply","editComment","deleteComment","setDeleteModalState","map","data","DeleteModal","setDeleting","cancelDelete","deleteBtnClick","Reply","addNewReply","replying","setReplying","editing","setEditing","setContent","deleting","newReply","commentContent","text","trim","split","firstWord","shift","join","updateComment","deleteReply","undefined","reply","Comment","updateReplies","commentDelete","type","finalType","finalId","comments","updateComments","deleteModalState","getData","res","fetch","json","localStorage","getItem","JSON","parse","setItem","stringify","document","body","classList","add","remove","method","updatedComments","forEach","voted","parentComment","updatedReplies","filter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport \"./Components/Styles/App.scss\";\n\nconst App = () => {\n\n  /* Добавление комментария */\nconst AddComment = ({ buttonValue, addComments, replyingTo }) => {\n  const replyingToUser = replyingTo ? `@${replyingTo}, ` : \"\";\n  const [comment, setComment] = useState(replyingToUser);\n\n  const clickHandler = () => {\n    if (comment === \"\" || comment === \" \") return;\n\n    const newComment = {\n      id: Math.floor(Math.random() * 100) + 5,\n      content: replyingToUser + comment.replace(replyingToUser, \"\"),\n      createdAt: new Date(),\n      score: 0,\n      username: \"juliusomo\",\n      currentUser: true,\n      replies: [],\n    };\n\n    addComments(newComment);\n    setComment(\"\");\n  };\n\n  return (\n    <div className=\"add-comment\">\n      <div className=\"profile-pic\"></div>\n      <textarea\n        className=\"comment-input\"\n        placeholder=\"Add a comment\"\n        value={comment}\n        onChange={(e) => {\n          setComment(e.target.value);\n        }}\n      />\n      <div className=\"send-btn-container\">\n        <div className=\"profile-pic\"></div>\n        <button className=\"add-btn\" onClick={clickHandler}>\n          {buttonValue}\n        </button>\n      </div>\n    </div>\n  );\n};\n\n/* Добавление комментария */\n\n/* Блок ответа */\nconst ReplyContainer = ({\n  commentData,\n  updateScore,\n  addReply,\n  editComment,\n  deleteComment,\n  setDeleteModalState,\n}) => {\n  return (\n    <div className=\"reply-container\">\n      {commentData.map((data) => (\n        <Reply\n          key={data.id}\n          commentData={data}\n          updateScore={updateScore}\n          addNewReply={addReply}\n          editComment={editComment}\n          deleteComment={deleteComment}\n          setDeleteModalState={setDeleteModalState}\n        />\n      ))}\n    </div>\n  );\n};\n/* Блок ответа */\n\n\n/* Удаление модалки */\nconst DeleteModal = ({ setDeleting, deleteComment, setDeleteModalState }) => {\n  const cancelDelete = () => {\n    setDeleting(false);\n    setDeleteModalState(false);\n  };\n\n  const deleteBtnClick = () => {\n    deleteComment();\n    setDeleteModalState(false);\n  };\n\n  return (\n    <div className=\"delete-confirmation-wrapper\">\n      <div className=\"delete-container\">\n        <div className=\"title\">Delete comment</div>\n        <div className=\"confirmation-message\">\n          Are you sure you want to delete this comment? This will remove the\n          comment and can't be undone.\n        </div>\n        <div className=\"btn-container\">\n          <button className=\"cancel-btn\" onClick={cancelDelete}>\n            No, cancel\n          </button>\n          <button className=\"delete-btn\" onClick={deleteBtnClick}>\n            Yes, delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n/* Удаление модалки */\n\n\n/* Ответы */\nconst Reply = ({\n  commentData,\n  updateScore,\n  addNewReply,\n  editComment,\n  deleteComment,\n  setDeleteModalState,\n}) => {\n  const [replying, setReplying] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [content, setContent] = useState(commentData.content);\n  const [deleting, setDeleting] = useState(false);\n\n  // adding reply\n  const addReply = (newReply) => {\n    addNewReply(newReply);\n    setReplying(false);\n  };\n\n  const commentContent = () => {\n    const text = commentData.content.trim().split(\" \");\n    const firstWord = text.shift().split(\",\");\n\n    return !editing ? (\n      <div className=\"comment-content\">\n        <span className=\"replyingTo\">{firstWord}</span>\n        {text.join(\" \")}\n      </div>\n    ) : (\n      <textarea\n        className=\"content-edit-box\"\n        value={content}\n        onChange={(e) => {\n          setContent(e.target.value);\n        }}\n      />\n    );\n  };\n\n  const updateComment = () => {\n    editComment(content, commentData.id, \"reply\");\n    setEditing(false);\n  };\n\n  // delete comment\n  const deleteReply = () => {\n    deleteComment(commentData.id, \"reply\");\n    setDeleting(false);\n  };\n\n  return (\n    <div\n      className={`comment-container ${\n        commentData.replies[0] !== undefined ? \"gap\" : \"\"\n      }`}\n    >\n      <div className=\"comment\">\n        <CommentVotes\n          updateScore={updateScore}\n          commentData={commentData}\n          type=\"reply\"\n        />\n        <div className=\"comment--body\">\n          <CommentHeader\n            commentData={commentData}\n            setReplying={setReplying}\n            setDeleting={setDeleting}\n            setDeleteModalState={setDeleteModalState}\n            setEditing={setEditing}\n          />\n\n          {commentContent()}\n          {editing && (\n            <button className=\"update-btn\" onClick={updateComment}>\n              update\n            </button>\n          )}\n        </div>\n        <CommentFooter\n          updateScore={updateScore}\n          commentData={commentData}\n          setReplying={setReplying}\n          setDeleting={setDeleting}\n          setDeleteModalState={setDeleteModalState}\n          setEditing={setEditing}\n          type=\"reply\"\n        />\n      </div>\n\n      {replying && (\n        <AddComment\n          buttonValue={\"reply\"}\n          addComments={addReply}\n          replyingTo={commentData.username}\n        />\n      )}\n      {commentData.replies.map((reply) => (\n        <Reply key={reply.id} commentData={reply} addReply={addReply} />\n      ))}\n\n      {deleting && (\n        <DeleteModal\n          setDeleting={setDeleting}\n          deleteComment={deleteReply}\n          setDeleteModalState={setDeleteModalState}\n        />\n      )}\n    </div>\n  );\n};\n/* Ответы */\n\n\n\nconst Comment = ({\n  commentData,\n  updateScore,\n  updateReplies,\n  editComment,\n  commentDelete,\n  setDeleteModalState,\n}) => {\n  const [replying, setReplying] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [content, setContent] = useState(commentData.content);\n  const [deleting, setDeleting] = useState(false);\n\n  const addReply = (newReply) => {\n    const replies = [...commentData.replies, newReply];\n    updateReplies(replies, commentData.id);\n    setReplying(false);\n  };\n\n  const updateComment = () => {\n    editComment(content, commentData.id, \"comment\");\n    setEditing(false);\n  };\n\n  const deleteComment = (id, type) => {\n    const finalType = type !== undefined ? type : \"comment\";\n    const finalId = id !== undefined ? id : commentData.id;\n    commentDelete(finalId, finalType, commentData.id);\n    setDeleting(false);\n  };\n\n  return (\n    <div\n      className={`comment-container ${\n        commentData.replies[0] !== undefined ? \"reply-container-gap\" : \"\"\n      }`}\n    >\n      <div className=\"comment\">\n        <CommentVotes\n          updateScore={updateScore}\n          commentData={commentData}\n          type=\"comment\"\n        />\n        <div className=\"comment--body\">\n          <CommentHeader\n            commentData={commentData}\n            replying={replying}\n            setReplying={setReplying}\n            setDeleting={setDeleting}\n            setDeleteModalState={setDeleteModalState}\n            setEditing={setEditing}\n          />\n          {!editing ? (\n            <div className=\"comment-content\">{commentData.content}</div>\n          ) : (\n            <textarea\n              className=\"content-edit-box\"\n              value={content}\n              onChange={(e) => {\n                setContent(e.target.value);\n              }}\n            />\n          )}\n          {editing && (\n            <button className=\"update-btn\" onClick={updateComment}>\n              update\n            </button>\n          )}\n        </div>\n        <CommentFooter\n          updateScore={updateScore}\n          commentData={commentData}\n          setReplying={setReplying}\n          setDeleting={setDeleting}\n          setDeleteModalState={setDeleteModalState}\n          setEditing={setEditing}\n          type=\"comment\"\n        />{\" \"}\n      </div>\n\n      {replying && (\n        <AddComment\n          buttonValue={\"reply\"}\n          addComments={addReply}\n          replyingTo={commentData.username}\n        />\n      )}\n      {commentData.replies !== [] && (\n        <ReplyContainer\n          key={commentData.replies.id}\n          commentData={commentData.replies}\n          updateScore={updateScore}\n          addReply={addReply}\n          editComment={editComment}\n          deleteComment={deleteComment}\n          setDeleteModalState={setDeleteModalState}\n        />\n      )}\n\n      {deleting && (\n        <DeleteModal\n          setDeleting={setDeleting}\n          deleteComment={deleteComment}\n          setDeleteModalState={setDeleteModalState}\n        />\n      )}\n    </div>\n  );\n};\n\n\n  const [comments, updateComments] = useState([]);\n  const [deleteModalState, setDeleteModalState] = useState(false);\n\n  const getData = async () => {\n    const res = await fetch(\"./data/data.json\");\n    const data = await res.json();\n    updateComments(data.comments);\n  };\n\n  useEffect(() => {\n    localStorage.getItem(\"comments\") !== null\n      ? updateComments(JSON.parse(localStorage.getItem(\"comments\")))\n      : getData();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n    deleteModalState\n      ? document.body.classList.add(\"overflow--hidden\")\n      : document.body.classList.remove(\"overflow--hidden\");\n  }, [comments, deleteModalState]);\n\n  // update score\n  const updateScore = (score, id, type, method) => {\n    let updatedComments = [...comments];\n\n    if (type === \"comment\") {\n      updatedComments.forEach((data) => {\n        if (data.id === id) {\n          data.score = score;\n          data.voted = method === \"upvote\" ? true : false;\n        }\n      });\n    } else if (type === \"reply\") {\n      updatedComments.forEach((comment) => {\n        comment.replies.forEach((data) => {\n          if (data.id === id) {\n            data.score = score;\n            data.voted = method === \"upvote\" ? true : false;\n          }\n        });\n      });\n    }\n    updateComments(updatedComments);\n  };\n\n  // add comments\n  const addComments = (newComment) => {\n    const updatedComments = [...comments, newComment];\n    updateComments(updatedComments);\n  };\n\n  // add replies\n  const updateReplies = (replies, id) => {\n    let updatedComments = [...comments];\n    updatedComments.forEach((data) => {\n      if (data.id === id) {\n        data.replies = [...replies];\n      }\n    });\n    updateComments(updatedComments);\n  };\n\n  // edit comment\n  const editComment = (content, id, type) => {\n    let updatedComments = [...comments];\n\n    if (type === \"comment\") {\n      updatedComments.forEach((data) => {\n        if (data.id === id) {\n          data.content = content;\n        }\n      });\n    } else if (type === \"reply\") {\n      updatedComments.forEach((comment) => {\n        comment.replies.forEach((data) => {\n          if (data.id === id) {\n            data.content = content;\n          }\n        });\n      });\n    }\n\n    updateComments(updatedComments);\n  };\n\n  // delete comment\n  let commentDelete = (id, type, parentComment) => {\n    let updatedComments = [...comments];\n    let updatedReplies = [];\n\n    if (type === \"comment\") {\n      updatedComments = updatedComments.filter((data) => data.id !== id);\n    } else if (type === \"reply\") {\n      comments.forEach((comment) => {\n        if (comment.id === parentComment) {\n          updatedReplies = comment.replies.filter((data) => data.id !== id);\n          comment.replies = updatedReplies;\n        }\n      });\n    }\n\n    updateComments(updatedComments);\n  };\n\n  return (\n    <main className=\"App\">\n      {comments.map((comment) => (\n        <Comment\n          key={comment.id}\n          commentData={comment}\n          updateScore={updateScore}\n          updateReplies={updateReplies}\n          editComment={editComment}\n          commentDelete={commentDelete}\n          setDeleteModalState={setDeleteModalState}\n        />\n      ))}\n      <AddComment buttonValue={\"send\"} addComments={addComments} />\n    </main>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}